version: "3.8"

services:
  dcgm-exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: dcgm-exporter
    # Expose exporter HTTP metrics endpoint
    ports:
      - "9400:9400"
    # Request all GPUs inside the container
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "65534:65534"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=${PROMETHEUS_RETENTION}
      - --storage.tsdb.retention.size=${PROMETHEUS_RETENTION_SIZE}
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /srv/librechat-data/monitoring/prometheus:/prometheus
    restart: unless-stopped
    depends_on:
      - dcgm-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "472:472"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    # Map to 3030 externally to avoid conflicts with other apps on 3000
    ports:
      - "3030:3000"
    volumes:
      - /srv/librechat-data/monitoring/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - prometheus


